version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: narratives_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  sns-backend:
    build:
      context: ./services/sns-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://dev_user:dev_password@postgres:5432/narratives_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  crm-backend:
    build:
      context: ./services/crm-backend
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - DATABASE_URL=postgres://dev_user:dev_password@postgres:5432/narratives_dev?sslmode=disable
    depends_on:
      - postgres

  catalog-backend:
    build:
      context: ./services/catalog-backend
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - DATABASE_URL=postgres://dev_user:dev_password@postgres:5432/narratives_dev?sslmode=disable
    depends_on:
      - postgres

  token-registry:
    build:
      context: ./services/token-registry
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - DATABASE_URL=postgres://dev_user:dev_password@postgres:5432/narratives_dev?sslmode=disable
    depends_on:
      - postgres

  sns-web:
    build:
      context: ./apps/sns-web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SNS_GRAPHQL_ENDPOINT=http://sns-backend:8080/graphql
    depends_on:
      - sns-backend

  crm-web:
    build:
      context: ./apps/crm-web
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_CRM_GRAPHQL_ENDPOINT=http://crm-backend:8080/graphql
    depends_on:
      - crm-backend

volumes:
  postgres_data:
